# check contents of main config file
# and built-in default site aka "virtual server"
# grep -vE '^\s*#|^\s*$' /etc/nginx/nginx.conf
# grep -vE '^\s*#|^\s*$' /etc/nginx/sites-enabled/default

# reverse proxy to frigate ui
# server {
#     listen 443 ssl;
#     server_name saelzler.org;
#     ssl_certificate /etc/letsencrypt/live/saelzler.org/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/saelzler.org/privkey.pem;
#     location / {
#         proxy_pass https://frigate.local:8971;
#         proxy_pass https://frigate.local:8971;
#         proxy_ssl_verify off;
#     }

# }



# ------------------------------------------------------------
# frigate.domain.com
# ------------------------------------------------------------
# server {
#   set $forward_scheme http;
#   set $server         "192.168.28.215";
#   set $port           8971;

#   listen 80;
#   listen 443 ssl http2;

#   server_name saelzler.org;
# }
# ------------------------------------------------------------
# no ssl cert defined
# ------------------------------------------------------------
# server {
#   set $forward_scheme http;
#   set $server         "192.168.28.215";
#   set $port           8971;

#   listen 80;
# #   listen 443 ssl http2;

#   server_name saelzler.org;
# }
# ------------------------------------------------------------
# welcome page of the FRIGATE container
# ------------------------------------------------------------
# server {
#   set $forward_scheme http;
#   set $server         "192.168.28.215";
#   set $port           8971;

#   listen 80;
# #   listen 443 ssl http2;

#   server_name saelzler.org;

#   proxy_set_header Upgrade $http_upgrade;
#   proxy_set_header Connection $http_connection;
#   proxy_http_version 1.1;

#   access_log /data/logs/proxy-host-40_access.log proxy;
#   error_log /data/logs/proxy-host-40_error.log warn;

#   location / {
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection $http_connection;
#     proxy_http_version 1.1;
#   }
# }
# ------------------------------------------------------------
# proxy is an unknown custom log format
# ------------------------------------------------------------
# server {
#   set $forward_scheme http;
#   set $server         "192.168.28.215";
#   set $port           8971;

#   listen 80;
# #   listen 443 ssl http2;

#   server_name saelzler.org;

#   proxy_set_header Upgrade $http_upgrade;
#   proxy_set_header Connection $http_connection;
#   proxy_http_version 1.1;

#   access_log /data/logs/proxy-host-40_access.log combined;
#   error_log /data/logs/proxy-host-40_error.log warn; # then tried debug

#   location / {
#     proxy_pass https://192.168.28.215:8971;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection $http_connection;
#     proxy_http_version 1.1;
#     proxy_ssl_protocols TLSv1.2 TLSv1.3;
#   }
# }
# mkdir -p /data/logs/
# cat /data/logs/proxy-host-40_access.log
# cat /data/logs/proxy-host-40_error.log
# nano /var/www/html/index.nginx-debian.html
# rm /etc/nginx/sites-enabled/default
# ------------------------------------------------------------
# working, but allows http traffic between revproxy and internet
# ------------------------------------------------------------
# server {
# #   set $forward_scheme http;
# #   set $server         "192.168.28.215";
# #   set $port           8971;

#   listen 80;
# #   listen 443 ssl http2;

#   server_name saelzler.org;

#   proxy_set_header Upgrade $http_upgrade;
#   proxy_set_header Connection $http_connection;
#   proxy_http_version 1.1;

#   access_log /data/logs/proxy-host-40_access.log combined;
#   error_log /data/logs/proxy-host-40_error.log warn; # then tried debug

#   location / {
#     proxy_pass https://192.168.28.215:8971;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection $http_connection;
#     proxy_http_version 1.1;
#     proxy_ssl_protocols TLSv1.2 TLSv1.3;
#   }
# }
# ------------------------------------------------------------
# still working
# ------------------------------------------------------------
# server {
# #   listen 80;
#   listen 443 ssl http2;

#   server_name saelzler.org;

#   access_log /data/logs/proxy-host-40_access.log combined;
#   error_log /data/logs/proxy-host-40_error.log warn; # then tried debug

#   location / {
#     proxy_pass https://192.168.28.215:8971;
#     # frigate uses newer tls/http versions
#     proxy_http_version 1.1;
#     proxy_ssl_protocols TLSv1.2 TLSv1.3;
#     # related to WebSocket support
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection $http_connection;
#   }
# }
# ------------------------------------------------------------
# no ssl cert defined
# ------------------------------------------------------------
# server {
#   server_name saelzler.org;
#   # no really sure if http2 is required, but it was on the frigate docs
#   listen 443 ssl http2;
#   ssl_certificate /etc/letsencrypt/live/saelzler.org/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/saelzler.org/privkey.pem;

#   access_log /data/logs/proxy-host-40_access.log combined;
#   error_log /data/logs/proxy-host-40_error.log warn;

#   location / {
#     proxy_pass https://192.168.28.215:8971;
#     # frigate uses newer tls/http versions
#     proxy_http_version 1.1;
#     proxy_ssl_protocols TLSv1.2 TLSv1.3;
#     # related to WebSocket support
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection $http_connection;
#   }
# }
# ------------------------------------------------------------
# works
# ------------------------------------------------------------
server {
  server_name saelzler.org;
  # no really sure if http2 is required, but it was on the frigate docs
  listen 443 ssl http2;
  ssl_certificate /etc/letsencrypt/live/saelzler.org/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/saelzler.org/privkey.pem;
  location / {
    proxy_pass https://frigate.local:8971;
    # frigate uses newer tls/http versions
    proxy_http_version 1.1;
    proxy_ssl_protocols TLSv1.2 TLSv1.3;
    # related to WebSocket support
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
    # disabling buffering because this is streaming data
    proxy_buffering off;
  }
}
