---
- name: Download Template, Create Container
  hosts: containers
  gather_facts: no # fact gathering will fail if the containers don't exist yet
  tasks:
    # download the latest template based on the `os` of the container
    - name: Check for Latest OS Template
      shell:
        cmd: "pveam available --section system | grep -o {{ os }}.* | sort -r | sed 1q"
      register: latest_template
      delegate_to: pve
      changed_when: false
    - set_fact:
        template_name: "{{ latest_template.stdout }}"
    - name: Download Latest Template
      command:
        cmd: "pveam download local {{ template_name }}"
      register: template_dl
      delegate_to: pve
      changed_when: template_dl.stdout_lines | last() != 'calculating checksum of existing file...OK, got correct file already, no need to download'

    # create container
    - name: Create New Container
      proxmox:
        # api connectivity
        vmid: "{{ container_id }}"
        api_user: "{{ api_user }}"
        api_password: "{{ root_pw }}"
        api_host: pve
        node: pve
        # hardware
        ostemplate: "local:vztmpl/{{ template_name }}"
        disk: "{{ tgt_storage }}:{{ disk_size }}"
        memory: "{{ ram }}"
        swap: 0
        cores: "{{ vcpus }}"
        netif: "{{ netconf }}"
        hostname: "{{ inventory_hostname }}"
        # options
        pubkey: "{{ pub_key }}"
        unprivileged: yes
        onboot: yes
        features:
          - nesting=1
      delegate_to: localhost

    # add (optional) passthrough devices to configuration file
    - lineinfile:
        path: "/etc/pve/lxc/{{ container_id }}.conf"
        line: "{{ item }}"
      with_items: "{{ passthrough_devices }}"
      delegate_to: pve
      when: passthrough_devices is defined

    # start container
    - name: Start the new container
      proxmox:
        # api connectivity
        vmid: "{{ container_id }}"
        api_user: "{{ api_user }}"
        api_password: "{{ root_pw }}"
        api_host: pve
        state: restarted # HACK: state = started seems broken
      delegate_to: localhost
    - wait_for_connection:
        timeout: 60

- name: Run system updates
  hosts: containers
  handlers:
    - import_tasks: handlers/main.yml
  roles:
    - full-upgrade
